name: assignment3

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install
      - run: npm install mocha
      - run: npm test

  build:
    needs: unit_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Generate log.txt
        run: |
          echo "Workflow start time: $(date --iso-8601=minutes)" > log.txt
          echo "Submitter: Tommy Ben-Shaul" >> log.txt

      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt

      - name: Build the Docker image
        run: |
          if docker build -t exercise3 .; then
            echo "Image successfully built" >> log.txt
          else
            echo "Image not able to be built" >> log.txt
          fi

      - name: Save Docker image
        run: |
          docker save exercise3 > exercise3.tar
          
      - name: delete old Docker image
        uses: geekyeggo/delete-artifact@v2
        with:
          name: exercise3-image

#      - name: Upload Docker image
#        uses: actions/upload-artifact@v3
#        with:
#          name: exercise3-image
#          path: exercise3.tar

      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download log file
        uses: actions/download-artifact@v3
        with:
          name: log

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest requests

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: exercise3-image

      - name: Run Docker image
        run: |
          docker load < exercise3.tar
          if docker run -d -p 8000:8000 exercise3; then
            echo "Container up and running" >> log.txt
            sleep 5
          else
            echo "Container failed to run" >> log.txt
          fi

      - name: Test the service
        run: |
          pytest -v tests/assn3_tests.py > assn3_test_results.txt
          echo "PYTEST_EXIT_CODE=$?" >> $GITHUB_ENV

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Generate log.txt
        run: |
          if [ "$PYTEST_EXIT_CODE" -ne 0 ]; then
            echo "Tests failed" >> log.txt
          else
            echo "Tests succeeded" >> log.txt
          fi


      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt