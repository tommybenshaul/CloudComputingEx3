name: Service Workflow

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install
      - run: npm install mocha
      - run: npm test
  build:
    needs: unit_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Delete existing artifacts
        uses: actions/github-script@v4
        with:
          script: |
            const artifacts = await github.actions.listArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            for (const artifact of artifacts.data.artifacts) {
              await github.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
            }
      - name: Build the Docker image
        run: |
          docker build -t exercise3 .

      - name: Save Docker image
        run: |
          docker save exercise3 > exercise3.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: exercise3-image
          path: exercise3.tar


  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest requests
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: exercise3-image
      - name: Load Docker image
        run: |
          docker load < exercise3.tar
      - name: Run Docker image
        run: |
          docker run -p 8000:8000 exercise3
      - name: Test the service
        run: pytest -v tests/assn3_tests.py
